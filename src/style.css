* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body,
html {
  height: auto;
  font-family: Arial, sans-serif;
  overflow: hidden; /* Show scrollbars only when necessary */
  cursor: url("https://play.vsthemes.org/t-cursors/12251/25a255ea88403b8c79e2bb1b03efd2a5.webp"), auto;
}
/* Custom cursor for buttons and specific classes */
button,
.hover-image,
.notification-bell,
.widget-image,
a {
  cursor: url("https://play.vsthemes.org/t-cursors/12251/b455a062e7b24797cc26a84981f31797.webp"), pointer !important;
}
/* Change link color to green and remove underline */
a {
  color: green; /* Set link color to green */
  text-decoration: none; /* Remove underline */
}
/* Optional: Change link color on hover and remove underline */
a:hover {
  color: lightgreen; /* Change to a darker green on hover for better visibility */
  text-decoration: none; /* Ensure underline is still removed on hover */
}
.drawing {
  position: absolute;
  border-radius: 50%;
  pointer-events: none; /* Prevent interference with mouse events */
  width: 10px; /* Size of the drawing dot */
  height: 10px; /* Size of the drawing dot */
  background-color: rgba(0, 255, 0, 0.7); /* Neon green color */
  box-shadow: 0 0 10px rgba(0, 255, 0, 1), 0 0 20px rgba(0, 255, 0, 0.5); /* Neon glow */
  transition: opacity 0.5s ease; /* Smooth transition for disappearing */
}
.video-background {
  position: relative;
  height: 100vh;
  overflow: hidden;
  background-color: black;
}
.video-background::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3); /* Dark overlay with reduced opacity (30%) */
  z-index: 1; /* Place the overlay behind the text */
}
video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 0; /* Place the video behind the overlay */
}
#loading-screen {
  position: fixed; /* Fixed position to cover the entire viewport */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  backdrop-filter: blur(10px); /* Initial blur effect */
  display: flex; /* Center content */
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
  z-index: 100; /* Ensure it's above other elements */
  opacity: 1; /* Initial opacity */
  transition: opacity 5s ease; /* Transition for fading out */
}

.loading-content {
  color: white; /* Text color */
  font-size: 3rem; /* Font size for the year */
}
.unblur {
  backdrop-filter: blur(0); /* Remove blur */
  transition: backdrop-filter 5s ease; /* Transition for unblur effect */
}
.slider {
  position: absolute;
  top: 35%; /* Adjust this value to move the content upwards */
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  z-index: 2; /* Place the text on top of the overlay */
  height: 400px; /* Set a fixed height */
  pointer-events: auto; /* Allow pointer events for slider */
}
.text.three-d {
  font-size: 4rem; /* Default font size */
  color: white; /* Default color */
  text-shadow:
    1px 1px 0 rgba(0, 0, 0, 0.5),
    2px 2px 0 rgba(0, 0, 0, 0.5),
    3px 3px 0 rgba(0, 0, 0, 0.5),
    4px 4px 0 rgba(0, 0, 0, 0.5),
    5px 5px 0 rgba(0, 0, 0, 0.5); /* Creates the 3D effect */
  -webkit-text-stroke: 1px black; /* Optional: adds an outline */
  animation: float 3s ease-in-out infinite; /* Floating animation */
  transition: color 0.3s ease; /* Transition for color change */
  position: relative; /* Allow the text to be positioned without affecting siblings */
  z-index: 1; /* Ensure it is above the background */
}

.hover-image {
  width: 80%; /* Adjusted to be responsive */
  max-height: 60px; /* Maximum height to maintain size on larger screens */
  max-width: 300px; /* Maximum width to maintain size on larger screens */
  margin-bottom: 20px; /* Space between image and text */
  transition: transform 0.3s ease, filter 0.3s ease; /* Smooth transitions */
  cursor: pointer; /* Change cursor to pointer */
  filter: drop-shadow(0 0 0 rgba(0, 0, 0, 0)); /* Initial state without shadow */
  pointer-events: auto; /* Ensure the image is clickable */
  display: block; /* Ensure the image is displayed as a block */
  margin-left: auto; /* Center the image */
  margin-right: auto; /* Center the image */
}

.hover-image:hover {
  transform: scale(1.1); /* Zoom in effect on hover */
  filter: drop-shadow(0 0 15px rgba(0, 255, 0, 0.7)) /* Green glow effect */ drop-shadow(0 0 25px rgba(0, 255, 0, 0.5))
    drop-shadow(0 0 35px rgba(0, 255, 0, 0.3));
}

.three-d {
  font-size: 4rem; /* Default font size */
  color: white; /* Default color */
  text-shadow:
    1px 1px 0 rgba(0, 0, 0, 0.5),
    2px 2px 0 rgba(0, 0, 0, 0.5),
    3px 3px 0 rgba(0, 0, 0, 0.5),
    4px 4px 0 rgba(0, 0, 0, 0.5),
    5px 5px 0 rgba(0, 0, 0, 0.5); /* Creates the 3D effect */
  -webkit-text-stroke: 1px black; /* Optional: adds an outline */
  animation: float 3s ease-in-out infinite; /* Floating animation */
  transition: color 0.3s ease; /* Transition for color change */
  position: relative; /* Allow the text to be positioned without affecting siblings */
  z-index: 1; /* Ensure it is above the background */
}

.three-d:hover {
  color: green; /* Change text color to green on hover */
}
.green-text {
  color: green;
}

.glow-button {
  padding: 10px 20px;
  font-size: 1.5rem;
  color: white;
  background-color: rgba(0, 0, 0, 0.5); /* Darker transparent background */
  border: 2px solid grey;
  border-radius: 25px; /* Rounded corners */
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
  white-space: nowrap; /* Prevent text from wrapping */
  display: inline-block; /* Ensure the button behaves like a block element */
  min-width: 100px; /* Set a minimum width for the button */
  width: fit-content; /* Adjust the width to fit the content */
  max-width: 250px; /* Set a maximum width for the button */
}

.button-container {
  display: flex;
  justify-content: center;
  gap: 20px; /* Space between buttons */
  margin: 5px 0; /* gap up and down */
  position: relative; /* Ensure it is positioned correctly */
  pointer-events: auto; /* Allow pointer events for buttons */
  flex-wrap: wrap; /* Wrap buttons to the next line if necessary */
}
.glow-button:hover {
  box-shadow: 0 0 20px rgba(0, 255, 0, 0.5), /* Green glow */ 0 0 30px rgba(0, 255, 0, 0.5), 0 0 40px
    rgba(0, 255, 0, 0.5), 0 0 50px rgba(0, 255, 0, 0.5);
  transform: scale(1.05); /* Add zoom effect on hover */
}

.iframe-container {
  position: relative; /* Position relative to allow absolute positioning of the iframe */
  width: 100%; /* Full width of the container */
  height: 55%; /* Full height of the container */
  padding-top: 56.25%; /* 16:9 Aspect Ratio (height/width * 100%) */
  margin-top: 20px; /* Space between the buttons and the iframe */
}

iframe {
  position: absolute; /* Position absolute to fill the container */
  top: 0;
  left: 0;
  width: 100%; /* Full width of the iframe */
  height: 100%; /* Full height of the iframe */
  border: none; /* Remove border */
  pointer-events: auto; /* Allow pointer events for iframe */
}

.widget-container {
  position: absolute;
  bottom: 20px;
  right: 20px; /* Position the widget to the right */
  z-index: 10; /* Ensure it is above other elements */
  display: flex; /* Use flexbox for positioning */
  align-items: center; /* Center items vertically */
  pointer-events: auto; /* Allow pointer events for the container */
}

.widget-image {
  width: 100px; /* Set a fixed size for the widget image */
  transition: transform 0.3s ease, filter 0.3s ease; /* Smooth transition for hover effect */
  position: relative; /* Ensure the widget image is positioned relative to its container */
  z-index: 11; /* Ensure it is above other elements */
  cursor: pointer; /* Change cursor to pointer to indicate it's clickable */
}
.widget-image:hover {
  transform: scale(1.1); /* Zoom effect on hover */
  filter: drop-shadow(0 0 8px rgba(0, 255, 0, 0.5)) /* Reduced green glow effect */
    drop-shadow(0 0 15px rgba(0, 255, 0, 0.3)) drop-shadow(0 0 25px rgba(0, 255, 0, 0.2));
}

@keyframes float {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0);
  }
}

.heart {
  position: absolute; /* Ensure it does not affect layout */
  animation: fall 2s forwards; /* Animation for falling effect */
  font-size: 30px; /* Default size */
}

/* Media query for mobile devices */
@media only screen and (max-width: 768px) {
  .heart {
    font-size: 20px; /* Smaller size for mobile */
  }
}

@keyframes fall {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  } /* Fall to the bottom of the viewport */
}
/* Notification Bell Styles */
.notification-bell {
  position: absolute;
  top: 20px; /* Position at the top */
  right: 20px; /* Position to the right */
  cursor: pointer; /* Change cursor to pointer */
  width: 60px; /* Set width of the bell icon */
  height: 60px; /* Set height of the bell icon */
  z-index: 3; /* Ensure it is above other elements */
}

#notification-panel {
  position: absolute; /* Keep it absolute */
  top: 60px; /* Adjust this value to position it just below the bell icon */
  right: 0; /* Align it with the right edge of the bell icon */
  width: 300px; /* Set a fixed width */
  border-radius: 10px; /* Rounded corners */
  overflow: hidden; /* Prevent overflow of content */
  display: none; /* Initially hidden */
  z-index: 6; /* Ensure it is above other elements */
  background-color: rgba(0, 0, 0, 0.8); /* Darker transparent background */
}

#notification-panel::before {
  content: ""; /* Create a pseudo-element */
  position: absolute; /* Position it absolutely */
  top: 0; /* Align it to the top */
  left: 0; /* Align it to the left */
  right: 0; /* Align it to the right */
  bottom: 0; /* Align it to the bottom */
  z-index: 1; /* Place it behind the content */
}

#notification-panel .overlay-content {
  position: relative; /* Position relative to the panel */
  color: white; /* Text color */
  padding: 20px; /* Padding inside the panel */
  border-radius: 10px; /* Rounded corners */
  background-color: transparent; /* Make the background transparent */
  z-index: 2; /* Place it above the dark background */
}

.footer {
  position: fixed; /* Change to fixed to stick to the bottom */
  bottom: 0; /* Stick to the bottom of the viewport */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Adjust for centering */
  color: white; /* Text color */
  font-size: 1rem; /* Reduced font size */
  text-align: center; /* Center text */
  z-index: 4; /* Ensure it is above other elements */
  background-color: rgba(0, 0, 0, 0.6); /* Optional: dark background for readability */
  padding: 5px; /* Reduced padding for smaller appearance */
  border-radius: 5px; /* Rounded corners */
  max-width: 320px;
}

.overlay {
  position: fixed; /* Fixed position to cover the entire viewport */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; /* Ensure it covers the full height */
  background-color: rgba(0, 0, 0, 0.5); /* Lighter transparent background */
  display: none; /* Initially hidden */
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
  z-index: 5; /* Ensure it is above other elements */
  overflow: hidden; /* Prevent overflow of heart animations */
}

.overlay-content {
  background-color: rgba(0, 0, 0, 0.7); /* Darker transparent background for content */
  border-radius: 15px; /* Rounded corners */
  padding: 30px; /* Padding inside the overlay */
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5); /* Shadow for depth */
  border: 2px solid green; /* Green outline */
  max-width: 800px; /* Max width of the overlay */
  width: 90%; /* Responsive width */
  text-align: left; /* Align text to the left */
  color: white; /* White text for overlay content */
  position: relative; /* Position relative to allow absolute positioning of the close button */
}

.close-overlay {
  position: absolute;
  top: 5px; /* Position from the top */
  right: 12px; /* Position from the right */
  font-size: 24px; /* Size of the close button */
  cursor: pointer; /* Change cursor to pointer */
  color: white; /* Close button color */
  background: none; /* No background */
  border: none; /* No border */
  z-index: 6; /* Ensure it is above other elements */
}

.close-overlay:hover {
  color: green; /* Change text color to green on hover */
  cursor: pointer; /* Change cursor to pointer on hover */
}

.table-scroll {
  max-height: 300px; /* Set a maximum height for the table container */
  overflow-y: auto; /* Enable vertical scrolling */
  margin-top: 10px; /* Space between the title and the table */
}

table {
  width: 100%; /* Full width of the table */
  border-collapse: collapse; /* Collapse borders */
}

th,
td {
  padding: 10px; /* Padding for table cells */
  border: 1px solid white; /* Border for table cells */
  text-align: left; /* Align text to the left */
}

th {
  background-color: rgba(0, 255, 0, 0.5); /* Light green background for headers */
}
.expertise-text {
  display: flex; /* Use flexbox for centering */
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
  text-align: center; /* Center text */
  margin: 10px 0; /* Add some margin for spacing */
  word-wrap: break-word; /* Allow long words to break to the next line */
  overflow-wrap: break-word; /* Ensure text wraps correctly */
  width: 100%; /* Ensure it takes full width */
}
/*Projects Overlay content*/
.scrolling-text {
  overflow: hidden; /* Hide overflow */
  white-space: nowrap; /* Prevent text wrapping */
  box-sizing: border-box; /* Include padding in width */
  width: 100%; /* Full width */
  position: relative; /* Position relative for absolute child */
}

.scrolling-text span {
  display: inline-block; /* Make the span inline-block */
  margin-right: 60px; /* Add margin to create a gap between spans */
  animation: scroll 31s linear infinite; /* Animation for scrolling (increased duration for slower effect) */
  animation-delay: 3s; /* Delay before starting the scroll */
}

@keyframes scroll {
  0% {
    transform: translateX(0); /* Start from the initial position */
  }
  100% {
    transform: translateX(-100%); /* Move to the left by the full width of the text */
  }
}

/* Media query for mobile devices */
@media only screen and (max-width: 600px) {
  /* Styles for mobile devices */
  .overlay-content {
    width: 90%; /* Adjust width for mobile devices */
    padding: 20px; /* Adjust padding for mobile devices */
  }
  .table-scroll {
    max-height: 200px; /* Adjust max height for mobile devices */
  }
  th,
  td {
    padding: 5px; /* Adjust padding for mobile devices */
  }
  .slider {
    top: 36%; /* Adjust the position for mobile devices; a lower value will move the element higher up.*/
    width: 95%; /* Increase width for mobile */
  }
  .text.three-d {
    font-size: 2.5rem; /* Adjust font size for mobile */
  }
  .three-d {
    font-size: 2rem; /* Adjust font size for mobile */
  }
  .widget-container {
    bottom: 90px; /* Higher values means more to up*/
    right: 5px; /* Position the widget to the right , lower values means more to right*/
  }

  .widget-image {
    width: 85px; /* Make the image a bit smaller */
  }
  .glow-button {
    font-size: 1.5rem; /* Reduce font size on smaller screens */
    padding: 8px 16px; /* Reduce padding on smaller screens */
    max-width: 200px;
  }
  .button-container {
    gap: 10px; /* Space between buttons */
  }
  .iframe-container {
    height: 75%; /* Full height of the container */
  }
  .footer {
    max-width: 330px;
  }

  /* Fix for main image in Firefox on mobile */
  .hover-image {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    width: 80% !important;
    max-width: 250px !important;
    height: auto !important;
    object-fit: contain !important;
  }
}

/* Tablet devices (portrait and landscape) */
@media only screen and (min-width: 601px) and (max-width: 1024px) {
  /* Styles for tablet devices */
  .overlay-content {
    width: 80%; /* Adjust width for tablet devices */
    padding: 15px; /* Adjust padding for tablet devices */
  }
  .table-scroll {
    max-height: 250px; /* Adjust max height for tablet devices */
  }
  th,
  td {
    padding: 10px; /* Adjust padding for tablet devices */
  }
  .text.three-d {
    font-size: 3rem; /* Adjust font size for mobile */
  }
  .three-d {
    font-size: 2.5rem; /* Adjust font size for mobile */
  }
  .glow-button {
    font-size: 1.5rem; /* Smallest font size */
    padding: 8px 16px; /* Further adjust padding */
    max-width: 200px; /* Further adjust max width for very small screens */
  }
  .widget-image {
    width: 90px; /* Make the image a bit smaller */
  }
  .widget-container {
    bottom: 20px; /* Higher values means more to up*/
    right: 5px; /* Position the widget to the right , lower values means more to right*/
  }
  .iframe-container {
    height: 85%; /* Full height of the container */
    width: 100%;
  }
}
@media only screen and (min-width: 320px) and (max-width: 599px) {
  .glow-button {
    font-size: 1.3rem; /* Smallest font size */
    padding: 8px 16px; /* Further adjust padding */
    max-width: 200px; /* Further adjust max width for very small screens */
  }
  .button-container {
    gap: 10px; /* Space between buttons */
  }
  .footer {
    max-width: 350px;
  }
}

/* Firefox-specific fixes */ \
@-moz-document url-prefix() {
  .hover-image {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
  }
}
